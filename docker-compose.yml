services:
  proposta-db:
    container_name: proposta-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: "SenhaForte12345"
    ports:
      - "1433:1433"
    networks:
      - insurance-network
    volumes:
      - proposta-db-data:/var/opt/mssql 
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "127.0.0.1", "-U", "sa", "-P", "SenhaForte12345", "-Q", "SELECT 1", "-C"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  contratacao-db:
    container_name: contratacao-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: "SenhaForte12345"
    ports:
      - "1434:1433"
    networks:
      - insurance-network
    volumes:
      - contratacao-db-data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "127.0.0.1", "-U", "sa", "-P", "SenhaForte12345", "-Q", "SELECT 1", "-C"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  rabbitmq:
    container_name: insurance-rabbitmq
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - insurance-network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped

  propostaservice:
    container_name: proposta-service
    build:
      context: .
      dockerfile: Insurance.PropostaService.Api/Dockerfile
    depends_on:
      proposta-db: 
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      DB_HOST: "proposta-db" 
      DB_NAME: "PropostaDb" 
      DB_SA_PASSWORD: "SenhaForte12345"
      RabbitMq__Host: "insurance-rabbitmq"
      DOTNET_RUNNING_IN_CONTAINER: true
    ports:
      - "5000:8080"
    networks:
      - insurance-network
    restart: unless-stopped

  contratacaoservice:
    container_name: contratacao-service
    build:
      context: .
      dockerfile: Insurance.ContratacaoService.Api/Dockerfile
    depends_on:
      contratacao-db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      propostaservice:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      DB_HOST: "contratacao-db"
      DB_NAME: "ContratacaoDb"
      DB_SA_PASSWORD: "SenhaForte12345"
      RabbitMq__Host: "insurance-rabbitmq"
      DOTNET_RUNNING_IN_CONTAINER: true
    ports:
      - "5001:8080"
    networks:
      - insurance-network
    restart: unless-stopped

volumes:
  proposta-db-data:
  contratacao-db-data:
  rabbitmq-data:

networks:
  insurance-network:
    driver: bridge